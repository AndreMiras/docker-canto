name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/canto
  SHOULD_PUBLISH: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    env:
      LATEST_VERSION: 8.1.3
    strategy:
      matrix:
        version: [
          1.0.0,
          2.0.0,
          3.0.0,
          4.0.0,
          5.0.0,
          5.0.2,
          6.0.0,
          7.0.0,
          7.0.1,
          7.1.0,
          8.0.0,
          8.1.0,
          8.1.1,
          8.1.3,
        ]
      # prevents from reaching Docker Hub pull rate limit
      max-parallel: 5
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        if: ${{ env.SHOULD_PUBLISH == 'true' }}
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set Go version
        run: |
          VERSION=${{ matrix.version }}
          MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
          if [ "$MAJOR_VERSION" -ge "8" ]; then
            echo "GO_VERSION=1.21" >> $GITHUB_ENV
          else
            echo "GO_VERSION=1.20" >> $GITHUB_ENV
          fi
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.version }}
            type=raw,value=latest,enable=${{ matrix.version == env.LATEST_VERSION }}
      - uses: docker/build-push-action@v6
        env:
          VERSION: ${{ matrix.version }}
        with:
          push: ${{ env.SHOULD_PUBLISH == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}
            GO_VERSION=${{ env.GO_VERSION }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:${{ matrix.version }}
          cache-to: ${{ env.SHOULD_PUBLISH == 'true' && format('type=registry,ref={0}:{1},mode=max', env.IMAGE_NAME, matrix.version) || '' }}
  update-readme:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: peter-evans/dockerhub-description@v4
        if: ${{ env.SHOULD_PUBLISH == 'true' }}
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.IMAGE_NAME }}
          readme-filepath: README.md
